#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3623
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Voodoo.Business
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="RoleSys")]
	public partial class DataSysDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertGroupMenuRelation(GroupMenuRelation instance);
    partial void UpdateGroupMenuRelation(GroupMenuRelation instance);
    partial void DeleteGroupMenuRelation(GroupMenuRelation instance);
    partial void InsertZTools(ZTools instance);
    partial void UpdateZTools(ZTools instance);
    partial void DeleteZTools(ZTools instance);
    partial void InsertSysPart(SysPart instance);
    partial void UpdateSysPart(SysPart instance);
    partial void DeleteSysPart(SysPart instance);
    partial void InsertZWorkType(ZWorkType instance);
    partial void UpdateZWorkType(ZWorkType instance);
    partial void DeleteZWorkType(ZWorkType instance);
    partial void InsertZWorkLog(ZWorkLog instance);
    partial void UpdateZWorkLog(ZWorkLog instance);
    partial void DeleteZWorkLog(ZWorkLog instance);
    partial void InsertZCustomer(ZCustomer instance);
    partial void UpdateZCustomer(ZCustomer instance);
    partial void DeleteZCustomer(ZCustomer instance);
    partial void InsertZEmployees(ZEmployees instance);
    partial void UpdateZEmployees(ZEmployees instance);
    partial void DeleteZEmployees(ZEmployees instance);
    partial void InsertZWorkEmployeesRelation(ZWorkEmployeesRelation instance);
    partial void UpdateZWorkEmployeesRelation(ZWorkEmployeesRelation instance);
    partial void DeleteZWorkEmployeesRelation(ZWorkEmployeesRelation instance);
    partial void InsertZPayLog(ZPayLog instance);
    partial void UpdateZPayLog(ZPayLog instance);
    partial void DeleteZPayLog(ZPayLog instance);
    #endregion
		
		public DataSysDataContext() : 
				base(global::Voodoo.Business.Properties.Settings.Default.RoleSysConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataSysDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataSysDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataSysDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataSysDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Group> Group
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<GroupMenuRelation> GroupMenuRelation
		{
			get
			{
				return this.GetTable<GroupMenuRelation>();
			}
		}
		
		public System.Data.Linq.Table<ZTools> ZTools
		{
			get
			{
				return this.GetTable<ZTools>();
			}
		}
		
		public System.Data.Linq.Table<SysPart> SysPart
		{
			get
			{
				return this.GetTable<SysPart>();
			}
		}
		
		public System.Data.Linq.Table<ZWorkType> ZWorkType
		{
			get
			{
				return this.GetTable<ZWorkType>();
			}
		}
		
		public System.Data.Linq.Table<ZWorkLog> ZWorkLog
		{
			get
			{
				return this.GetTable<ZWorkLog>();
			}
		}
		
		public System.Data.Linq.Table<ZCustomer> ZCustomer
		{
			get
			{
				return this.GetTable<ZCustomer>();
			}
		}
		
		public System.Data.Linq.Table<ZEmployees> ZEmployees
		{
			get
			{
				return this.GetTable<ZEmployees>();
			}
		}
		
		public System.Data.Linq.Table<ZWorkEmployeesRelation> ZWorkEmployeesRelation
		{
			get
			{
				return this.GetTable<ZWorkEmployeesRelation>();
			}
		}
		
		public System.Data.Linq.Table<ViewUserWorkLog> ViewUserWorkLog
		{
			get
			{
				return this.GetTable<ViewUserWorkLog>();
			}
		}
		
		public System.Data.Linq.Table<ZPayLog> ZPayLog
		{
			get
			{
				return this.GetTable<ZPayLog>();
			}
		}
		
		public System.Data.Linq.Table<ViewPayCard> ViewPayCard
		{
			get
			{
				return this.GetTable<ViewPayCard>();
			}
		}
	}
	
	[Table(Name="dbo.[Group]")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Group()
		{
			this._User = new EntitySet<User>(new Action<User>(this.attach_User), new Action<User>(this.detach_User));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Association(Name="Group_User", Storage="_User", ThisKey="Id", OtherKey="GroupId")]
		public EntitySet<User> User
		{
			get
			{
				return this._User;
			}
			set
			{
				this._User.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
	}
	
	[Table(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _UserPassword;
		
		private System.Nullable<int> _GroupId;
		
		private string _Sex;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _Status;
		
		private System.Nullable<int> _Commission;
		
		private EntityRef<Group> _Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCommissionChanging(System.Nullable<int> value);
    partial void OnCommissionChanged();
    #endregion
		
		public User()
		{
			this._Group = default(EntityRef<Group>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserPassword", DbType="NVarChar(50)")]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[Column(Storage="_Sex", DbType="NVarChar(50)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[Column(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Commission", DbType="Int")]
		public System.Nullable<int> Commission
		{
			get
			{
				return this._Commission;
			}
			set
			{
				if ((this._Commission != value))
				{
					this.OnCommissionChanging(value);
					this.SendPropertyChanging();
					this._Commission = value;
					this.SendPropertyChanged("Commission");
					this.OnCommissionChanged();
				}
			}
		}
		
		[Association(Name="Group_User", Storage="_Group", ThisKey="GroupId", OtherKey="Id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.User.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.User.Add(this);
						this._GroupId = value.Id;
					}
					else
					{
						this._GroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GroupMenuRelation")]
	public partial class GroupMenuRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _GroupId;
		
		private System.Nullable<int> _SysPartId;
		
		private System.Nullable<bool> _AllowView;
		
		private System.Nullable<bool> _AllowDelete;
		
		private System.Nullable<bool> _AllowEdit;
		
		private System.Nullable<bool> _AllowAdd;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnSysPartIdChanging(System.Nullable<int> value);
    partial void OnSysPartIdChanged();
    partial void OnAllowViewChanging(System.Nullable<bool> value);
    partial void OnAllowViewChanged();
    partial void OnAllowDeleteChanging(System.Nullable<bool> value);
    partial void OnAllowDeleteChanged();
    partial void OnAllowEditChanging(System.Nullable<bool> value);
    partial void OnAllowEditChanged();
    partial void OnAllowAddChanging(System.Nullable<bool> value);
    partial void OnAllowAddChanged();
    #endregion
		
		public GroupMenuRelation()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[Column(Storage="_SysPartId", DbType="Int")]
		public System.Nullable<int> SysPartId
		{
			get
			{
				return this._SysPartId;
			}
			set
			{
				if ((this._SysPartId != value))
				{
					this.OnSysPartIdChanging(value);
					this.SendPropertyChanging();
					this._SysPartId = value;
					this.SendPropertyChanged("SysPartId");
					this.OnSysPartIdChanged();
				}
			}
		}
		
		[Column(Storage="_AllowView", DbType="Bit")]
		public System.Nullable<bool> AllowView
		{
			get
			{
				return this._AllowView;
			}
			set
			{
				if ((this._AllowView != value))
				{
					this.OnAllowViewChanging(value);
					this.SendPropertyChanging();
					this._AllowView = value;
					this.SendPropertyChanged("AllowView");
					this.OnAllowViewChanged();
				}
			}
		}
		
		[Column(Storage="_AllowDelete", DbType="Bit")]
		public System.Nullable<bool> AllowDelete
		{
			get
			{
				return this._AllowDelete;
			}
			set
			{
				if ((this._AllowDelete != value))
				{
					this.OnAllowDeleteChanging(value);
					this.SendPropertyChanging();
					this._AllowDelete = value;
					this.SendPropertyChanged("AllowDelete");
					this.OnAllowDeleteChanged();
				}
			}
		}
		
		[Column(Storage="_AllowEdit", DbType="Bit")]
		public System.Nullable<bool> AllowEdit
		{
			get
			{
				return this._AllowEdit;
			}
			set
			{
				if ((this._AllowEdit != value))
				{
					this.OnAllowEditChanging(value);
					this.SendPropertyChanging();
					this._AllowEdit = value;
					this.SendPropertyChanged("AllowEdit");
					this.OnAllowEditChanged();
				}
			}
		}
		
		[Column(Storage="_AllowAdd", DbType="Bit")]
		public System.Nullable<bool> AllowAdd
		{
			get
			{
				return this._AllowAdd;
			}
			set
			{
				if ((this._AllowAdd != value))
				{
					this.OnAllowAddChanging(value);
					this.SendPropertyChanging();
					this._AllowAdd = value;
					this.SendPropertyChanged("AllowAdd");
					this.OnAllowAddChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ZTools")]
	public partial class ZTools : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ZTools()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SysPart")]
	public partial class SysPart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MenuTitle;
		
		private string _Url;
		
		private System.Nullable<bool> _Display;
		
		private int _ParentId;
		
		private string _MenuGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMenuTitleChanging(string value);
    partial void OnMenuTitleChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnDisplayChanging(System.Nullable<bool> value);
    partial void OnDisplayChanged();
    partial void OnParentIdChanging(int value);
    partial void OnParentIdChanged();
    partial void OnMenuGroupChanging(string value);
    partial void OnMenuGroupChanged();
    #endregion
		
		public SysPart()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_MenuTitle", DbType="NVarChar(50)")]
		public string MenuTitle
		{
			get
			{
				return this._MenuTitle;
			}
			set
			{
				if ((this._MenuTitle != value))
				{
					this.OnMenuTitleChanging(value);
					this.SendPropertyChanging();
					this._MenuTitle = value;
					this.SendPropertyChanged("MenuTitle");
					this.OnMenuTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Url", DbType="NVarChar(255)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[Column(Storage="_Display", DbType="Bit")]
		public System.Nullable<bool> Display
		{
			get
			{
				return this._Display;
			}
			set
			{
				if ((this._Display != value))
				{
					this.OnDisplayChanging(value);
					this.SendPropertyChanging();
					this._Display = value;
					this.SendPropertyChanged("Display");
					this.OnDisplayChanged();
				}
			}
		}
		
		[Column(Storage="_ParentId", DbType="Int NOT NULL")]
		public int ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[Column(Storage="_MenuGroup", DbType="NVarChar(50)")]
		public string MenuGroup
		{
			get
			{
				return this._MenuGroup;
			}
			set
			{
				if ((this._MenuGroup != value))
				{
					this.OnMenuGroupChanging(value);
					this.SendPropertyChanging();
					this._MenuGroup = value;
					this.SendPropertyChanged("MenuGroup");
					this.OnMenuGroupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ZWorkType")]
	public partial class ZWorkType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ZWorkType()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ZWorkLog")]
	public partial class ZWorkLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _CustomerId;
		
		private string _CustomerName;
		
		private string _Sex;
		
		private string _Tel;
		
		private string _MobilePhone;
		
		private System.Nullable<System.DateTime> _WorkTime;
		
		private string _WorkContent;
		
		private string _HomeName;
		
		private string _Address;
		
		private System.Nullable<int> _WorkHour;
		
		private string _EmployeesIds;
		
		private string _EmployeesNames;
		
		private string _ToolIds;
		
		private System.Nullable<decimal> _PayMoney;
		
		private System.Nullable<bool> _IsDelete;
		
		private System.Nullable<bool> _IsFinished;
		
		private System.Nullable<int> _Customerappraise;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnWorkTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnWorkTimeChanged();
    partial void OnWorkContentChanging(string value);
    partial void OnWorkContentChanged();
    partial void OnHomeNameChanging(string value);
    partial void OnHomeNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnWorkHourChanging(System.Nullable<int> value);
    partial void OnWorkHourChanged();
    partial void OnEmployeesIdsChanging(string value);
    partial void OnEmployeesIdsChanged();
    partial void OnEmployeesNamesChanging(string value);
    partial void OnEmployeesNamesChanged();
    partial void OnToolIdsChanging(string value);
    partial void OnToolIdsChanged();
    partial void OnPayMoneyChanging(System.Nullable<decimal> value);
    partial void OnPayMoneyChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    partial void OnIsFinishedChanging(System.Nullable<bool> value);
    partial void OnIsFinishedChanged();
    partial void OnCustomerappraiseChanging(System.Nullable<int> value);
    partial void OnCustomerappraiseChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public ZWorkLog()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerName", DbType="NVarChar(50)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[Column(Storage="_Sex", DbType="VarChar(50)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[Column(Storage="_Tel", DbType="NVarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[Column(Storage="_MobilePhone", DbType="NVarChar(50)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[Column(Storage="_WorkTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> WorkTime
		{
			get
			{
				return this._WorkTime;
			}
			set
			{
				if ((this._WorkTime != value))
				{
					this.OnWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._WorkTime = value;
					this.SendPropertyChanged("WorkTime");
					this.OnWorkTimeChanged();
				}
			}
		}
		
		[Column(Storage="_WorkContent", DbType="NVarChar(512)")]
		public string WorkContent
		{
			get
			{
				return this._WorkContent;
			}
			set
			{
				if ((this._WorkContent != value))
				{
					this.OnWorkContentChanging(value);
					this.SendPropertyChanging();
					this._WorkContent = value;
					this.SendPropertyChanged("WorkContent");
					this.OnWorkContentChanged();
				}
			}
		}
		
		[Column(Storage="_HomeName", DbType="NVarChar(50)")]
		public string HomeName
		{
			get
			{
				return this._HomeName;
			}
			set
			{
				if ((this._HomeName != value))
				{
					this.OnHomeNameChanging(value);
					this.SendPropertyChanging();
					this._HomeName = value;
					this.SendPropertyChanged("HomeName");
					this.OnHomeNameChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(512)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_WorkHour", DbType="Int")]
		public System.Nullable<int> WorkHour
		{
			get
			{
				return this._WorkHour;
			}
			set
			{
				if ((this._WorkHour != value))
				{
					this.OnWorkHourChanging(value);
					this.SendPropertyChanging();
					this._WorkHour = value;
					this.SendPropertyChanged("WorkHour");
					this.OnWorkHourChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeesIds", DbType="NVarChar(50)")]
		public string EmployeesIds
		{
			get
			{
				return this._EmployeesIds;
			}
			set
			{
				if ((this._EmployeesIds != value))
				{
					this.OnEmployeesIdsChanging(value);
					this.SendPropertyChanging();
					this._EmployeesIds = value;
					this.SendPropertyChanged("EmployeesIds");
					this.OnEmployeesIdsChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeesNames", DbType="NVarChar(255)")]
		public string EmployeesNames
		{
			get
			{
				return this._EmployeesNames;
			}
			set
			{
				if ((this._EmployeesNames != value))
				{
					this.OnEmployeesNamesChanging(value);
					this.SendPropertyChanging();
					this._EmployeesNames = value;
					this.SendPropertyChanged("EmployeesNames");
					this.OnEmployeesNamesChanged();
				}
			}
		}
		
		[Column(Storage="_ToolIds", DbType="NVarChar(50)")]
		public string ToolIds
		{
			get
			{
				return this._ToolIds;
			}
			set
			{
				if ((this._ToolIds != value))
				{
					this.OnToolIdsChanging(value);
					this.SendPropertyChanging();
					this._ToolIds = value;
					this.SendPropertyChanged("ToolIds");
					this.OnToolIdsChanged();
				}
			}
		}
		
		[Column(Storage="_PayMoney", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PayMoney
		{
			get
			{
				return this._PayMoney;
			}
			set
			{
				if ((this._PayMoney != value))
				{
					this.OnPayMoneyChanging(value);
					this.SendPropertyChanging();
					this._PayMoney = value;
					this.SendPropertyChanged("PayMoney");
					this.OnPayMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_IsDelete", DbType="Bit")]
		public System.Nullable<bool> IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Column(Storage="_IsFinished", DbType="Bit")]
		public System.Nullable<bool> IsFinished
		{
			get
			{
				return this._IsFinished;
			}
			set
			{
				if ((this._IsFinished != value))
				{
					this.OnIsFinishedChanging(value);
					this.SendPropertyChanging();
					this._IsFinished = value;
					this.SendPropertyChanged("IsFinished");
					this.OnIsFinishedChanged();
				}
			}
		}
		
		[Column(Storage="_Customerappraise", DbType="Int")]
		public System.Nullable<int> Customerappraise
		{
			get
			{
				return this._Customerappraise;
			}
			set
			{
				if ((this._Customerappraise != value))
				{
					this.OnCustomerappraiseChanging(value);
					this.SendPropertyChanging();
					this._Customerappraise = value;
					this.SendPropertyChanged("Customerappraise");
					this.OnCustomerappraiseChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(2000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ZCustomer")]
	public partial class ZCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Sex;
		
		private string _Tel;
		
		private string _MobilePhone;
		
		private string _HomeName;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _ValidateTime;
		
		private string _CardNo;
		
		private System.Nullable<int> _UsedHour;
		
		private System.Nullable<int> _LeftHour;
		
		private string _IDCard;
		
		private System.Nullable<bool> _IsReg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnHomeNameChanging(string value);
    partial void OnHomeNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnValidateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnValidateTimeChanged();
    partial void OnCardNoChanging(string value);
    partial void OnCardNoChanged();
    partial void OnUsedHourChanging(System.Nullable<int> value);
    partial void OnUsedHourChanged();
    partial void OnLeftHourChanging(System.Nullable<int> value);
    partial void OnLeftHourChanged();
    partial void OnIDCardChanging(string value);
    partial void OnIDCardChanged();
    partial void OnIsRegChanging(System.Nullable<bool> value);
    partial void OnIsRegChanged();
    #endregion
		
		public ZCustomer()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_Sex", DbType="VarChar(50)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[Column(Storage="_Tel", DbType="VarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[Column(Storage="_MobilePhone", DbType="VarChar(50)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[Column(Storage="_HomeName", DbType="VarChar(50)")]
		public string HomeName
		{
			get
			{
				return this._HomeName;
			}
			set
			{
				if ((this._HomeName != value))
				{
					this.OnHomeNameChanging(value);
					this.SendPropertyChanging();
					this._HomeName = value;
					this.SendPropertyChanged("HomeName");
					this.OnHomeNameChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_ValidateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ValidateTime
		{
			get
			{
				return this._ValidateTime;
			}
			set
			{
				if ((this._ValidateTime != value))
				{
					this.OnValidateTimeChanging(value);
					this.SendPropertyChanging();
					this._ValidateTime = value;
					this.SendPropertyChanged("ValidateTime");
					this.OnValidateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_CardNo", DbType="NVarChar(50)")]
		public string CardNo
		{
			get
			{
				return this._CardNo;
			}
			set
			{
				if ((this._CardNo != value))
				{
					this.OnCardNoChanging(value);
					this.SendPropertyChanging();
					this._CardNo = value;
					this.SendPropertyChanged("CardNo");
					this.OnCardNoChanged();
				}
			}
		}
		
		[Column(Storage="_UsedHour", DbType="Int")]
		public System.Nullable<int> UsedHour
		{
			get
			{
				return this._UsedHour;
			}
			set
			{
				if ((this._UsedHour != value))
				{
					this.OnUsedHourChanging(value);
					this.SendPropertyChanging();
					this._UsedHour = value;
					this.SendPropertyChanged("UsedHour");
					this.OnUsedHourChanged();
				}
			}
		}
		
		[Column(Storage="_LeftHour", DbType="Int")]
		public System.Nullable<int> LeftHour
		{
			get
			{
				return this._LeftHour;
			}
			set
			{
				if ((this._LeftHour != value))
				{
					this.OnLeftHourChanging(value);
					this.SendPropertyChanging();
					this._LeftHour = value;
					this.SendPropertyChanged("LeftHour");
					this.OnLeftHourChanged();
				}
			}
		}
		
		[Column(Storage="_IDCard", DbType="NVarChar(50)")]
		public string IDCard
		{
			get
			{
				return this._IDCard;
			}
			set
			{
				if ((this._IDCard != value))
				{
					this.OnIDCardChanging(value);
					this.SendPropertyChanging();
					this._IDCard = value;
					this.SendPropertyChanged("IDCard");
					this.OnIDCardChanged();
				}
			}
		}
		
		[Column(Storage="_IsReg", DbType="Bit")]
		public System.Nullable<bool> IsReg
		{
			get
			{
				return this._IsReg;
			}
			set
			{
				if ((this._IsReg != value))
				{
					this.OnIsRegChanging(value);
					this.SendPropertyChanging();
					this._IsReg = value;
					this.SendPropertyChanged("IsReg");
					this.OnIsRegChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ZEmployees")]
	public partial class ZEmployees : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserNo;
		
		private string _UserName;
		
		private string _Sex;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _Tel;
		
		private string _MobilePhone;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _JoinTime;
		
		private string _WorkAble;
		
		private System.Nullable<int> _SalaryDegree;
		
		private System.Nullable<bool> _IsFree;
		
		private string _Remark;
		
		private string _UserType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNoChanging(string value);
    partial void OnUserNoChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnJoinTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJoinTimeChanged();
    partial void OnWorkAbleChanging(string value);
    partial void OnWorkAbleChanged();
    partial void OnSalaryDegreeChanging(System.Nullable<int> value);
    partial void OnSalaryDegreeChanged();
    partial void OnIsFreeChanging(System.Nullable<bool> value);
    partial void OnIsFreeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    #endregion
		
		public ZEmployees()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserNo", DbType="NVarChar(50)")]
		public string UserNo
		{
			get
			{
				return this._UserNo;
			}
			set
			{
				if ((this._UserNo != value))
				{
					this.OnUserNoChanging(value);
					this.SendPropertyChanging();
					this._UserNo = value;
					this.SendPropertyChanged("UserNo");
					this.OnUserNoChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_Sex", DbType="VarChar(50)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[Column(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[Column(Storage="_Tel", DbType="NVarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[Column(Storage="_MobilePhone", DbType="NVarChar(50)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_JoinTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JoinTime
		{
			get
			{
				return this._JoinTime;
			}
			set
			{
				if ((this._JoinTime != value))
				{
					this.OnJoinTimeChanging(value);
					this.SendPropertyChanging();
					this._JoinTime = value;
					this.SendPropertyChanged("JoinTime");
					this.OnJoinTimeChanged();
				}
			}
		}
		
		[Column(Storage="_WorkAble", DbType="NVarChar(512)")]
		public string WorkAble
		{
			get
			{
				return this._WorkAble;
			}
			set
			{
				if ((this._WorkAble != value))
				{
					this.OnWorkAbleChanging(value);
					this.SendPropertyChanging();
					this._WorkAble = value;
					this.SendPropertyChanged("WorkAble");
					this.OnWorkAbleChanged();
				}
			}
		}
		
		[Column(Storage="_SalaryDegree", DbType="Int")]
		public System.Nullable<int> SalaryDegree
		{
			get
			{
				return this._SalaryDegree;
			}
			set
			{
				if ((this._SalaryDegree != value))
				{
					this.OnSalaryDegreeChanging(value);
					this.SendPropertyChanging();
					this._SalaryDegree = value;
					this.SendPropertyChanged("SalaryDegree");
					this.OnSalaryDegreeChanged();
				}
			}
		}
		
		[Column(Storage="_IsFree", DbType="Bit")]
		public System.Nullable<bool> IsFree
		{
			get
			{
				return this._IsFree;
			}
			set
			{
				if ((this._IsFree != value))
				{
					this.OnIsFreeChanging(value);
					this.SendPropertyChanging();
					this._IsFree = value;
					this.SendPropertyChanged("IsFree");
					this.OnIsFreeChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(2000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_UserType", DbType="NVarChar(50)")]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ZWorkEmployeesRelation")]
	public partial class ZWorkEmployeesRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _EmployeesId;
		
		private System.Nullable<int> _WorkLogId;
		
		private System.Nullable<decimal> _Salary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnEmployeesIdChanging(System.Nullable<int> value);
    partial void OnEmployeesIdChanged();
    partial void OnWorkLogIdChanging(System.Nullable<int> value);
    partial void OnWorkLogIdChanged();
    partial void OnSalaryChanging(System.Nullable<decimal> value);
    partial void OnSalaryChanged();
    #endregion
		
		public ZWorkEmployeesRelation()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeesId", DbType="Int")]
		public System.Nullable<int> EmployeesId
		{
			get
			{
				return this._EmployeesId;
			}
			set
			{
				if ((this._EmployeesId != value))
				{
					this.OnEmployeesIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeesId = value;
					this.SendPropertyChanged("EmployeesId");
					this.OnEmployeesIdChanged();
				}
			}
		}
		
		[Column(Storage="_WorkLogId", DbType="Int")]
		public System.Nullable<int> WorkLogId
		{
			get
			{
				return this._WorkLogId;
			}
			set
			{
				if ((this._WorkLogId != value))
				{
					this.OnWorkLogIdChanging(value);
					this.SendPropertyChanging();
					this._WorkLogId = value;
					this.SendPropertyChanged("WorkLogId");
					this.OnWorkLogIdChanged();
				}
			}
		}
		
		[Column(Storage="_Salary", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ViewUserWorkLog")]
	public partial class ViewUserWorkLog
	{
		
		private System.Nullable<int> _EmployeesId;
		
		private System.Nullable<decimal> _Salary;
		
		private System.Nullable<int> _WorkLogId;
		
		private string _UserName;
		
		private System.Nullable<int> _SalaryDegree;
		
		private string _UserType;
		
		private string _WorkContent;
		
		private System.Nullable<int> _CustomerId;
		
		private string _CustomerName;
		
		private System.Nullable<System.DateTime> _WorkTime;
		
		private System.Nullable<bool> _IsFinished;
		
		private System.Nullable<bool> _IsDelete;
		
		public ViewUserWorkLog()
		{
		}
		
		[Column(Storage="_EmployeesId", DbType="Int")]
		public System.Nullable<int> EmployeesId
		{
			get
			{
				return this._EmployeesId;
			}
			set
			{
				if ((this._EmployeesId != value))
				{
					this._EmployeesId = value;
				}
			}
		}
		
		[Column(Storage="_Salary", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this._Salary = value;
				}
			}
		}
		
		[Column(Storage="_WorkLogId", DbType="Int")]
		public System.Nullable<int> WorkLogId
		{
			get
			{
				return this._WorkLogId;
			}
			set
			{
				if ((this._WorkLogId != value))
				{
					this._WorkLogId = value;
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[Column(Storage="_SalaryDegree", DbType="Int")]
		public System.Nullable<int> SalaryDegree
		{
			get
			{
				return this._SalaryDegree;
			}
			set
			{
				if ((this._SalaryDegree != value))
				{
					this._SalaryDegree = value;
				}
			}
		}
		
		[Column(Storage="_UserType", DbType="NVarChar(50)")]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this._UserType = value;
				}
			}
		}
		
		[Column(Storage="_WorkContent", DbType="NVarChar(512)")]
		public string WorkContent
		{
			get
			{
				return this._WorkContent;
			}
			set
			{
				if ((this._WorkContent != value))
				{
					this._WorkContent = value;
				}
			}
		}
		
		[Column(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this._CustomerId = value;
				}
			}
		}
		
		[Column(Storage="_CustomerName", DbType="NVarChar(50)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[Column(Storage="_WorkTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> WorkTime
		{
			get
			{
				return this._WorkTime;
			}
			set
			{
				if ((this._WorkTime != value))
				{
					this._WorkTime = value;
				}
			}
		}
		
		[Column(Storage="_IsFinished", DbType="Bit")]
		public System.Nullable<bool> IsFinished
		{
			get
			{
				return this._IsFinished;
			}
			set
			{
				if ((this._IsFinished != value))
				{
					this._IsFinished = value;
				}
			}
		}
		
		[Column(Storage="_IsDelete", DbType="Bit")]
		public System.Nullable<bool> IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this._IsDelete = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.ZPayLog")]
	public partial class ZPayLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _UserId;
		
		private string _UserName;
		
		private System.Nullable<int> _OperUserId;
		
		private System.Nullable<decimal> _PayMoney;
		
		private System.Nullable<int> _PayHour;
		
		private System.Nullable<int> _EmployeesId;
		
		private string _CardNo;
		
		private System.Nullable<System.DateTime> _PayTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnOperUserIdChanging(System.Nullable<int> value);
    partial void OnOperUserIdChanged();
    partial void OnPayMoneyChanging(System.Nullable<decimal> value);
    partial void OnPayMoneyChanged();
    partial void OnPayHourChanging(System.Nullable<int> value);
    partial void OnPayHourChanged();
    partial void OnEmployeesIdChanging(System.Nullable<int> value);
    partial void OnEmployeesIdChanged();
    partial void OnCardNoChanging(string value);
    partial void OnCardNoChanged();
    partial void OnPayTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPayTimeChanged();
    #endregion
		
		public ZPayLog()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_OperUserId", DbType="Int")]
		public System.Nullable<int> OperUserId
		{
			get
			{
				return this._OperUserId;
			}
			set
			{
				if ((this._OperUserId != value))
				{
					this.OnOperUserIdChanging(value);
					this.SendPropertyChanging();
					this._OperUserId = value;
					this.SendPropertyChanged("OperUserId");
					this.OnOperUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_PayMoney", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PayMoney
		{
			get
			{
				return this._PayMoney;
			}
			set
			{
				if ((this._PayMoney != value))
				{
					this.OnPayMoneyChanging(value);
					this.SendPropertyChanging();
					this._PayMoney = value;
					this.SendPropertyChanged("PayMoney");
					this.OnPayMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_PayHour", DbType="Int")]
		public System.Nullable<int> PayHour
		{
			get
			{
				return this._PayHour;
			}
			set
			{
				if ((this._PayHour != value))
				{
					this.OnPayHourChanging(value);
					this.SendPropertyChanging();
					this._PayHour = value;
					this.SendPropertyChanged("PayHour");
					this.OnPayHourChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeesId", DbType="Int")]
		public System.Nullable<int> EmployeesId
		{
			get
			{
				return this._EmployeesId;
			}
			set
			{
				if ((this._EmployeesId != value))
				{
					this.OnEmployeesIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeesId = value;
					this.SendPropertyChanged("EmployeesId");
					this.OnEmployeesIdChanged();
				}
			}
		}
		
		[Column(Storage="_CardNo", DbType="NVarChar(50)")]
		public string CardNo
		{
			get
			{
				return this._CardNo;
			}
			set
			{
				if ((this._CardNo != value))
				{
					this.OnCardNoChanging(value);
					this.SendPropertyChanging();
					this._CardNo = value;
					this.SendPropertyChanged("CardNo");
					this.OnCardNoChanged();
				}
			}
		}
		
		[Column(Storage="_PayTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PayTime
		{
			get
			{
				return this._PayTime;
			}
			set
			{
				if ((this._PayTime != value))
				{
					this.OnPayTimeChanging(value);
					this.SendPropertyChanging();
					this._PayTime = value;
					this.SendPropertyChanged("PayTime");
					this.OnPayTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ViewPayCard")]
	public partial class ViewPayCard
	{
		
		private System.Nullable<int> _UserId;
		
		private string _UserName;
		
		private System.Nullable<decimal> _PayMoney;
		
		private System.Nullable<int> _PayHour;
		
		private System.Nullable<int> _EmployeesId;
		
		private string _CardNo;
		
		private System.Nullable<System.DateTime> _PayTime;
		
		private string _UserNo;
		
		private string _Sex;
		
		private string _UserType;
		
		private System.Nullable<int> _SalaryDegree;
		
		public ViewPayCard()
		{
		}
		
		[Column(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[Column(Storage="_PayMoney", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PayMoney
		{
			get
			{
				return this._PayMoney;
			}
			set
			{
				if ((this._PayMoney != value))
				{
					this._PayMoney = value;
				}
			}
		}
		
		[Column(Storage="_PayHour", DbType="Int")]
		public System.Nullable<int> PayHour
		{
			get
			{
				return this._PayHour;
			}
			set
			{
				if ((this._PayHour != value))
				{
					this._PayHour = value;
				}
			}
		}
		
		[Column(Storage="_EmployeesId", DbType="Int")]
		public System.Nullable<int> EmployeesId
		{
			get
			{
				return this._EmployeesId;
			}
			set
			{
				if ((this._EmployeesId != value))
				{
					this._EmployeesId = value;
				}
			}
		}
		
		[Column(Storage="_CardNo", DbType="NVarChar(50)")]
		public string CardNo
		{
			get
			{
				return this._CardNo;
			}
			set
			{
				if ((this._CardNo != value))
				{
					this._CardNo = value;
				}
			}
		}
		
		[Column(Storage="_PayTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PayTime
		{
			get
			{
				return this._PayTime;
			}
			set
			{
				if ((this._PayTime != value))
				{
					this._PayTime = value;
				}
			}
		}
		
		[Column(Storage="_UserNo", DbType="NVarChar(50)")]
		public string UserNo
		{
			get
			{
				return this._UserNo;
			}
			set
			{
				if ((this._UserNo != value))
				{
					this._UserNo = value;
				}
			}
		}
		
		[Column(Storage="_Sex", DbType="VarChar(50)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[Column(Storage="_UserType", DbType="NVarChar(50)")]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this._UserType = value;
				}
			}
		}
		
		[Column(Storage="_SalaryDegree", DbType="Int")]
		public System.Nullable<int> SalaryDegree
		{
			get
			{
				return this._SalaryDegree;
			}
			set
			{
				if ((this._SalaryDegree != value))
				{
					this._SalaryDegree = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
